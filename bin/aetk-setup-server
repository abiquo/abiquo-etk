#!/usr/bin/env ruby
require 'logger'

CONFIG_FILE='/etc/sysconfig/abiquo-server'
TOMCAT_SERVER_CONFIG='/opt/abiquo/tomcat/conf/Catalina/localhost/server.xml'
TOMCAT_SERVER_BUILTIN_CONFIG='/opt/abiquo/tomcat/webapps/server/META-INF/context.xml'
TOMCAT_API_CONFIG='/opt/abiquo/tomcat/conf/Catalina/localhost/api.xml'
TOMCAT_API_BUILTIN_CONFIG='/opt/abiquo/tomcat/webapps/api/META-INF/context.xml'

Log = Logger.new('/var/log/abiquo-etk.log')
Log.level = Logger::INFO

def tomcat_server_config
  if File.exist? TOMCAT_SERVER_CONFIG
    return TOMCAT_SERVER_CONFIG
  elsif File.exist? TOMCAT_SERVER_BUILTIN_CONFIG
    return TOMCAT_SERVER_BUILTIN_CONFIG
  else
    return '' 
  end
end

def tomcat_api_config
  if File.exist? TOMCAT_API_CONFIG
    return TOMCAT_API_CONFIG
  elsif File.exist? TOMCAT_API_BUILTIN_CONFIG
    return TOMCAT_API_BUILTIN_CONFIG
  else
    return '' 
  end
end


def create_schemas(user = 'root', password = '')
  cmd = ''
  if password.strip.chomp.empty? 
    cmd = "mysql -u #{user} "
  else
    cmd = "mysql -u #{user} -p#{password} "
  end
  if `#{cmd} -e 'show databases'|grep kinton`.strip.chomp.empty?
    out = `mysql -u root < /usr/share/doc/abiquo-server/database/kinton-schema.sql`
    if $?.exitstatus == 0 
      Log.info 'kinton-schema imported succesfully.'
    else
      Log.error "Error importing kinton-schema: #{out}"
    end
    out = `mysql -u root < /usr/share/doc/abiquo-server/database/kinton-premium-schema.sql`
    if $?.exitstatus == 0 
      Log.info 'kinton-premium-schema imported succesfully.'
    else
      Log.error "Error importing kinton-premium-schema: #{out}"
    end
  else
    Log.warn 'kinton schema found. Skipping schema creation.'
  end
  
end

begin
	@settings = {}
	if File.exist? CONFIG_FILE
		File.read(CONFIG_FILE).each_line do |l|
			next if l.strip.chomp.empty?
			key,val = l.strip.chomp.split('=')
			@settings[key.strip.chomp] = val.strip.chomp rescue ''
		end

	else
		Log.error "Config file #{CONFIG_FILE} does not exist. Exit."
		exit
	end
	`aetk set server eventSinkAddress http://#{@settings['abiquo_server_ip']}:8080/server/EventSink`
	if File.exist? tomcat_server_config
	  Log.info "Setting db user/password in localhost server context.xml"
	  `aetk setattr #{tomcat_server_config} 'Resource[@name="jdbc/abiquoDB"]' url 'jdbc:mysql://#{@settings['abiquo_db_host']}:3306/kinton?autoReconnect=true'`
		`aetk setattr #{tomcat_server_config} 'Resource[@name="jdbc/abiquoDB"]' password #{@settings['abiquo_db_password']}`
		`aetk setattr #{tomcat_server_config} 'Resource[@name="jdbc/abiquoDB"]' username root`
		`aetk setattr #{tomcat_server_config} 'Resource[@name="jdbc/heartbeatDB"]' url 'jdbc:mysql://#{@settings['abiquo_db_host']}:3306/kinton?autoReconnect=true'`
		`aetk setattr #{tomcat_server_config} 'Resource[@name="jdbc/heartbeatDB"]' password #{@settings['abiquo_db_password']}`
		`aetk setattr #{tomcat_server_config} 'Resource[@name="jdbc/heartbeatDB"]' username root`
  else
    Log.error 'Server context config not found.'
	end
	
	if File.exist? tomcat_api_config
		Log.info "Setting db user/password in localhost api context.xml"
		`aetk setattr #{tomcat_api_config} 'Resource[@name="jdbc/abiquoDB"]' url 'jdbc:mysql://#{@settings['abiquo_db_host']}:3306/kinton?autoReconnect=true'`
		`aetk setattr #{tomcat_api_config} 'Resource[@name="jdbc/abiquoDB"]' password #{@settings['abiquo_db_password']}`
		`aetk setattr #{tomcat_api_config} 'Resource[@name="jdbc/abiquoDB"]' username root`
	else
    Log.error 'API context config not found.'
	end

  Log.info "Creating database schemas..."
  create_schemas
rescue Exception => e
	Log.error "Unhandled exception: #{e.message}"
	Log.error "Unhandled exception: #{e.backtrace}"
end


