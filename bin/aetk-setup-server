#!/usr/bin/env ruby
require 'logger'

CONFIG_FILE='/etc/sysconfig/abiquo-server'

Log = Logger.new('/var/log/abiquo-etk.log')
Log.level = Logger::INFO

def create_schemas(user = 'root', password = '')
  cmd = ''
  if password.strip.chomp.empty? 
    cmd = "mysql -u #{user} "
  else
    cmd = "mysql -u #{user} -p#{password} "
  end
  if `#{cmd} -e 'show databases'|grep kinton`.strip.chomp.empty?
    out = `mysql -u root < /usr/share/doc/abiquo-server/database/kinton-schema.sql`
    if $?.exitstatus == 0 
      Log.info 'kinton-schema imported succesfully.'
    else
      Log.error "Error importing kinton-schema: #{out}"
    end
    out = `mysql -u root < /usr/share/doc/abiquo-server/database/kinton-premium-schema.sql`
    if $?.exitstatus == 0 
      Log.info 'kinton-premium-schema imported succesfully.'
    else
      Log.error "Error importing kinton-premium-schema: #{out}"
    end
  else
    Log.warn 'kinton schema found. Skipping schema creation.'
  end
  
end

begin
	@settings = {}
	if File.exist? CONFIG_FILE
		File.read(CONFIG_FILE).each_line do |l|
			next if l.strip.chomp.empty?
			key,val = l.strip.chomp.split('=')
			@settings[key.strip.chomp] = val.strip.chomp rescue ''
		end
	else
		Log.error "Config file #{CONFIG_FILE} does not exist. Exit."
		exit
	end

  Log.info "Setting EventSink URL"
  `abicli set event-sink-url http://#{@settings['abiquo_server_ip']}:8080/server/EventSink`
  
  Log.info "Setting DB Properties"
  `abicli set database-host #{@settings['abiquo_db_host']}`
  `abicli set database-user root`
  `abicli set database-password #{@settings['abiquo_db_password']}`
  `abicli set mail-server 127.0.0.1`
    
  Log.info "Creating database schemas..."
  create_schemas
rescue Exception => e
	Log.error "Unhandled exception: #{e.message}"
	Log.error "Unhandled exception: #{e.backtrace}"
end


